:: Widgets Shop [widget]
<<widget "shoptraits">>
	Traits:
	<<for _trait range setup.clothingTraits>>
		<<if _temp_choice.type.includes(_trait)>>
			<<set _traitObj to setup.shopDetails[_trait]>>
			<<if _traitObj>>
				<div class="trait-description">
					<<if _traitObj.desc>>
						<<clothingtrait _trait 1>>
						<br>
					<</if>>
					<<if !_traitObj.desc>>
						<<print _traitObj.name>>
					<<elseif _traitObj.details is "none">>
						<div><<print _traitObj.name>> - <<print _traitObj.desc>></div>
					<<else>>
							<div>
								<<set _traitDetails to `<i class="green normal">` + _traitObj.details + `</i>`>>
								<<print _traitObj.name>><<print "&nbsp;"+"-"+"&nbsp;">>
								<span class="tooltip-anchor" @tooltip="_traitDetails">
									_traitObj.desc
								</span>
							</div>
					<</if>>
				</div>
			<</if>>
		<</if>>
	<</for>>
	<br>
<</widget>>

<<widget "shopClothingFilterSettingsDefault">>
	<<if $shopClothingFilter is undefined>>
		<<set $shopClothingFilter to {
			gender: "none",
			traits: [],
			reveal:{
				lewd: true,
				risqué: true,
				seductive: true,
				comfy: true,
				tasteful: true,
				smart: true,
				unassuming: true
			},
			revealColour:{
				lewd: "red",
				risqué: "pink",
				seductive: "purple",
				comfy: "blue",
				tasteful: "lblue",
				smart: "teal",
				unassuming: "green"
			}
		}>>
		<<unset $shopClothingFilterTraits>>
		<<unset $shopClothingFilterGender>>
		<<unset $clothingTraitTypes>>
	<</if>>
<</widget>>

<<widget "shopClothingFilterReset">>
	<<if $shopClothingFilter is undefined>>
		<<set $shopClothingFilter = {}>>
	<</if>>
	<<set $shopClothingFilter.gender = { female: true, neutral: true, male: true }>>
	<<set $shopClothingFilter.reveal = { from: 0, to: 9999 }>>
	<<set $shopClothingFilter.warmth = { from: 0, to: 50 }>>
	<<set $shopClothingFilter.traits = []>>
	<<set $shopClothingFilter.active = false>>
	<<set $shopClothingFilter.sorting = { prop: "price", order: 'asc', enabled: false }>>
	<<set $shopClothingFilter.outfit = { index: "none" }>>
<</widget>>

/*Args: slots used in an array*/
<<widget "shopBuyItemStatus">>
	<<if _args[0]>>
		<<if $wardrobes.shopReturn is "wardrobe" or $wardrobes[$wardrobes.shopReturn] is undefined>>
			<<set _returnWardrobe to $wardrobe>>
		<<else>>
			<<set _returnWardrobe to $wardrobes[$wardrobes.shopReturn]>>
		<</if>>
		<<set _undamagedCount to 0>>
		<<set _damagedCount to 0>>
		<<set _space to _returnWardrobe.space>>
		<<set _spaceLeft to clone(_space)>>
		<<for _i to 0; _i lt _args[0].length; _i++>>
			<<if _i is 0>>
				<<for _j to 0; _j lt _returnWardrobe[_args[0][0]].length; _j++>>
					<<if _returnWardrobe[_args[0][0]][_j].name is _temp_choice.name>>
						<<set _undamagedCount++>>
						<<if _returnWardrobe[_args[0][0]][_j].outfitPrimary isnot undefined>>
							<<for _valueShop range _returnWardrobe[_args[0][0]][_j].outfitPrimary>>
								<<if _valueShop is "broken" or _valueShop is "split">>
									<<set _damagedCount++>>
									<<set _undamagedCount-->>
									<<break>>
								<</if>>
							<</for>>
						<<else>>
							<<set _damagedCount to -1>>
						<</if>>
					<</if>>
				<</for>>
			<</if>>
			<<if _space - _returnWardrobe[_args[0][_i]].length lt _spaceLeft>>
				<<set _spaceLeft to _space - _returnWardrobe[_args[0][_i]].length>>
			<</if>>
			Wardrobe <<print (_args[0][_i]).replace("_"," ")>> slots used: <<print _returnWardrobe[_args[0][_i]].length>> / _space.
			<br>
		<</for>>
		<<if _undamagedCount gt 0>>
			You own _undamagedCount of this item<<if _damagedCount gte 0>> unbroken<</if>>.
			<br>
		<</if>>
		<<if _damagedCount gt 0>>
			You own _damagedCount of this item that have been broken in some way.
			<br>
		<</if>>
	<</if>>
<</widget>>

/*Args: slot, itemName, outfit*/
<<widget "shopFullImage">>
	<<if _args[0] and _args[1] isnot undefined>>
		<<set _shopFullImageVar to [_args[0], _args[1]]>>
		<a value="Refresh" onclick="Wikifier.wikifyEval('<<replace #shopFullImage>><<shopFullImage $clothingShopSlot $clothes_choice>><</replace>>');">Refresh</a>
		<br>
		<div class="hideImageOverflow">
			<div class="shopImg">
				<<set _customPrimary to customColour($customColors.color.primary, $customColors.saturation.primary, $customColors.brightness.primary, $customColors.contrast.primary, $customColors.sepia.primary)>>
				<<set _customSecondary to customColour($customColors.color.secondary, $customColors.saturation.secondary, $customColors.brightness.secondary, $customColors.contrast.secondary, $customColors.sepia.secondary)>>
				<<shopFullImageSlot _args[0] _args[1]>>
			</div>
		</div>
	<</if>>
<</widget>>

<<widget "shopFullImageSlot">>
	<<if _args[0] and _args[1]>>
		<<set $_slot to _args[0]>>
		<<set $_item to _args[1]>>
		<<if setup.clothes[$_slot][$_item].mainImage isnot 0>>
			<<shopFullImagePart $_slot $_item "full" $colouraction _customPrimary>>
		<</if>>
		<<if setup.clothes[$_slot][$_item].breast_img is 1>>
			<<switch $player.perceived_breastsize>>
				<<case 12>>
					<<set _breastSize to 6>>
				<<case 8 9 10 11>>
					<<set _breastSize to 5>>
				<<case 6 7>>
					<<set _breastSize to 4>>
				<<case 4 5>>
					<<set _breastSize to 3>>
				<<case 3>>
					<<set _breastSize to 2>>
				<<case 0 1 2>>
					<<set _breastSize to 1>>
			<</switch>>
			<<shopFullImagePart $_slot $_item `(_breastSize - 1)` $colouraction _customPrimary>>
		<</if>>
		<<if setup.clothes[$_slot][$_item].sleeve_img is 1>>
			<<shopFullImagePart $_slot $_item "right" $colouraction _customPrimary>>
			<<shopFullImagePart $_slot $_item "left" $colouraction _customPrimary>>
		<</if>>
		<<if setup.clothes[$_slot][$_item].leftImage is 1>>
			<<shopFullImagePart $_slot $_item "left" $colouraction _customPrimary>>
		<</if>>
		<<if setup.clothes[$_slot][$_item].rightImage is 1>>
			<<shopFullImagePart $_slot $_item "right" $colouraction _customPrimary>>
		<</if>>
		<<if setup.clothes[$_slot][$_item].accessory is 1>>
			<<shopFullImagePart $_slot $_item "acc" $accessorycolouraction _customSecondary>>
		<</if>>
		<<set $_outfitPrimary to setup.clothes[$_slot][$_item].outfitPrimary>>
		<<if $_outfitPrimary isnot undefined>>
			<<for $_label, $_value range $_outfitPrimary>>
				<<for $_i to 0; $_i < setup.clothes[$_label].length; $_i++>>
					<<if setup.clothes[$_label][$_i].name is $_value>>
						<<shopFullImageSlot $_label $_i>>
						<<break>>
					<</if>>
				<</for>>
			<</for>>
		<</if>>
	<</if>>
<</widget>>

/*_args[0] - slot, _args[1] - itemNo, _args[2] - file, _args[3] - colour, _args[4] - custom colour*/
<<widget "shopFullImagePart">>
	<img @class="'clothes-'+ (typeof(_args[3]) == 'string' ? _args[3].replace(/ /g, '-') : '') + ' layer-' + _args[0]" @src="'img/clothes/' + _args[0] + '/' + setup.clothes[_args[0]][_args[1]].variable + '/' + _args[2] + '.png'" @style="(_args[3] is 'custom'? _args[4]:'')">
<</widget>>

<<widget "shopFullImageToggle">>
	<<toggleclass #shopFullImage "hidden">>
<</widget>>

<<widget "specialClothesSetup">>
	<<if $specialClothes is undefined>>
		<<set $specialClothes to {
			"witchdress":"locked",
			"christmasdress":"locked",
			"jinglebelldress":"locked",
			"sleevelessjinglebelldress":"locked",
			"serafuku":"locked",
			"vampirejacket":"locked",
			"slutshirt":"locked",
			"christmasshirt":"locked",
			"bellydancer'stop":"locked",
			"christmastrousers":"locked",
			"bellydancer'sbottoms":"locked",
			"haremvest":"locked",
			"harempants":"locked",
			"loincloth":"locked",
			"witchhat":"locked",
			"broomstick":"locked",
			"christmashat":"locked",
			"chefhat":"locked",
			"fedora":"locked",
			"holypendant":"locked",
			"darkpendant":"locked",
			"stonependant":"locked",
			"christmaslegwarmers":"locked",
			"witchshoes":"locked",
			"mummyfacewrap":"locked",
			"mummytop":"locked",
			"mummyskirt":"locked",
			"cowbell":"locked",
			"featheredhairclip":"locked",
			"catsuit":"locked",
			"holystole":"locked",
			"minisnowman":"locked",
			"cowbra":"locked",
			"cowpanties":"locked",
			"cowsocks":"locked",
			"cowsleeves":"locked",
			"bellydancer'sveil":"locked",
			"rose":"locked",
			"scarecrowshirt":"locked",
			"scarecrowhat":"locked",
			"skeletonmask":"locked",
			"skeletonoutfit":"locked",
			"classyvampirejacket":"locked",
			"bellydancer'sshoes":"locked",
			"futuristicbodysuit":"locked",
			"daisy":"locked",
			"esotericspectacles":"locked",
			"spiritmask":"locked",
			"ragtop":"locked",
			"ragskirt":"locked",
			"minipumpkin":"locked",
			"gakuran":"locked",
			"classicserafuku":"locked",
			"sailorribbon":"locked",
			"islandermask":"locked",
			"sexynun'shabit":"locked",
			"sexynun'sgloves":"locked",
			"sexynun'sstockings":"locked",
			"sexynun'sveil":"locked",
			"sexynun'sornateveil":"locked",
			"sexypriest'svestments":"locked",
			"foxmask":"locked",
		}>>
	<</if>>
	<!-- the following lines are for backwards compatibility with older saves. if you want to add a new item, add it above as well. -->
	<!-- when adding new items, don't forget to also update $objectVersion.specialClothes in versionUpdate -->
	<<if $specialClothes.cowbell is undefined>>
		<<set $specialClothes.cowbell to "locked">>
	<</if>>
	<<if $specialClothes.featheredhairclip is undefined>>
		<<set $specialClothes.featheredhairclip to "locked">>
	<</if>>
	<<if $specialClothes.catsuit is undefined>>
		<<set $specialClothes.catsuit to "locked">>
	<</if>>
	<<if $specialClothes.holystole is undefined>>
		<<set $specialClothes.holystole to "locked">>
	<</if>>
	<<if $specialClothes.minisnowman is undefined>>
		<<set $specialClothes.minisnowman to "locked">>
	<</if>>
	<<if $specialClothes.cowbra is undefined>>
		<<set $specialClothes.cowbra to "locked">>
		<<set $specialClothes.cowpanties to "locked">>
		<<set $specialClothes.cowsocks to "locked">>
		<<set $specialClothes.cowsleeves to "locked">>
	<</if>>
	<<if $specialClothes["bellydancer'sveil"] is undefined>>
		<<set $specialClothes["bellydancer'sveil"] to "locked">>
	<</if>>
	<<if $specialClothes["bellydancer'sshoes"] is undefined>>
		<<set $specialClothes["bellydancer'sshoes"] to "locked">>
	<</if>>
	<<if $specialClothes["harempants"] is undefined>>
		<<set $specialClothes["harempants"] to "locked">>
	<</if>>
	<<if $specialClothes["haremvest"] is undefined>>
		<<set $specialClothes["haremvest"] to "locked">>
	<</if>>
	<<if $specialClothes.rose is undefined>>
		<<set $specialClothes.rose to "locked">>
	<</if>>
	<<if $specialClothes.scarecrowshirt is undefined>>
		<<set $specialClothes.scarecrowshirt to "locked">>
		<<set $specialClothes.scarecrowhat to "locked">>
	<</if>>
	<<if $specialClothes.skeletonmask is undefined>>
		<<set $specialClothes.skeletonmask to "locked">>
		<<set $specialClothes.skeletonoutfit to "locked">>
	<</if>>
	<<if $specialClothes.classyvampirejacket is undefined>>
		<<set $specialClothes.classyvampirejacket to "locked">>
	<</if>>
	<<if $specialClothes.futuristicbodysuit is undefined>>
		<<set $specialClothes.futuristicbodysuit to "locked">>
	<</if>>
	<<if $specialClothes.daisy is undefined>>
		<<set $specialClothes.daisy to "locked">>
	<</if>>
	<<if $specialClothes.esotericspectacles is undefined>>
		<<set $specialClothes.esotericspectacles to "locked">>
	<</if>>
	<<if $specialClothes.spiritmask is undefined>>
		<<set $specialClothes.spiritmask to "locked">>
	<</if>>
	<<if $specialClothes.ragtop is undefined>>
		<<set $specialClothes.ragtop to "locked">>
	<</if>>
	<<if $specialClothes.ragskirt is undefined>>
		<<set $specialClothes.ragskirt to "locked">>
	<</if>>
	<<if $specialClothes.minipumpkin is undefined>>
		<<set $specialClothes.minipumpkin to "locked">>
	<</if>>
	<<if $specialClothes.gakuran is undefined>>
		<<set $specialClothes.gakuran to "locked">>
	<</if>>
	<<if $specialClothes.sailorribbon is undefined>>
		<<set $specialClothes.sailorribbon to $specialClothes.serafuku is "unlocked" ? "unlocked" : "locked">>
		<<set $specialClothes.classicserafuku to $specialClothes.serafuku is "unlocked" ? "unlocked" : "locked">>
	<</if>>
	<<if $specialClothes.islandermask is undefined>>
		<<set $specialClothes.islandermask to "locked">>
	<</if>>
	<<if $specialClothes.sleevelessjinglebelldress is undefined>>
		<<set $specialClothes.sleevelessjinglebelldress to "locked">>
	<</if>>
	<<if $specialClothes.jinglebelldress is undefined>>
		<<set $specialClothes.jinglebelldress to "locked">>
	<</if>>
	<<if $specialClothes["sexynun'shabit"] is undefined>>
		<<set $specialClothes["sexynun'shabit"] to "locked">>
		<<set $specialClothes["sexynun'sgloves"] to "locked">>
		<<set $specialClothes["sexynun'sstockings"] to "locked">>
		<<set $specialClothes["sexynun'sveil"] to "locked">>
		<<set $specialClothes["sexynun'sornateveil"] to "locked">>
		<<set $specialClothes["sexypriest'svestments"] to "locked">>
	<</if>>
	<<if $specialClothes.foxmask is undefined>>
		<<set $specialClothes.foxmask to "locked">>
	<</if>>
	<<if $specialClothes.broomstick is undefined>>
		<<set $specialClothes.broomstick to "locked">>
	<</if>>
<</widget>>

<<widget "specialClothesUpdate">>
	<<if $headdrive is 1>>
		<<set $specialClothes["classicserafuku"] to "unlocked">>
		<<set $specialClothes["serafuku"] to "unlocked">>
		<<set $specialClothes["gakuran"] to "unlocked">>
		<<set $specialClothes["sailorribbon"] to "unlocked">>
	<</if>>
	<<if $undergroundbrothelescaped>>
		<<set $specialClothes["slutshirt"] to "unlocked">>
	<</if>>
	<<if $halloween is 1>>
		<<set $specialClothes["witchdress"] to "unlocked">>
		<<set $specialClothes["vampirejacket"] to "unlocked">>
		<<set $specialClothes["witchhat"] to "unlocked">>
		<<set $specialClothes["broomstick"] to "unlocked">>
		<<set $specialClothes["witchshoes"] to "unlocked">>
		<<set $specialClothes["mummyfacewrap"] to "unlocked">>
		<<set $specialClothes["mummytop"] to "unlocked">>
		<<set $specialClothes["mummyskirt"] to "unlocked">>
		<<set $specialClothes["scarecrowshirt"] to "unlocked">>
		<<set $specialClothes["scarecrowhat"] to "unlocked">>
		<<set $specialClothes["skeletonmask"] to "unlocked">>
		<<set $specialClothes["skeletonoutfit"] to "unlocked">>
		<<set $specialClothes["classyvampirejacket"] to "unlocked">>
		<<set $specialClothes["futuristicbodysuit"] to "unlocked">>
		<<set $specialClothes["minipumpkin"] to "unlocked">>
	<</if>>
	<<if $christmas is 1>>
		<<set $specialClothes["christmasdress"] to "unlocked">>
		<<set $specialClothes["christmasshirt"] to "unlocked">>
		<<set $specialClothes["christmastrousers"] to "unlocked">>
		<<set $specialClothes["christmashat"] to "unlocked">>
		<<set $specialClothes["christmaslegwarmers"] to "unlocked">>
		<<set $specialClothes["minisnowman"] to "unlocked">>
		<<set $specialClothes["jinglebelldress"] to "unlocked">>
		<<set $specialClothes["sleevelessjinglebelldress"] to "unlocked">>
	<</if>>
	<<if $valentines is 1>>
		<<set $specialClothes["rose"] to "unlocked">>
	<</if>>
	<<if $brothelshowdata.intro>>
		<<set $specialClothes["bellydancer'stop"] to "unlocked">>
		<<set $specialClothes["bellydancer'sbottoms"] to "unlocked">>
		<<set $specialClothes["bellydancer'sveil"] to "unlocked">>
		<<set $specialClothes["bellydancer'sshoes"] to "unlocked">>
		<<set $specialClothes["harempants"] to "unlocked">>
		<<set $specialClothes["haremvest"] to "unlocked">>
	<</if>>
	<<if $syndromeeden is 1 or $syndromewolves is 1>>
		<<set $specialClothes["loincloth"] to "unlocked">>
	<</if>>
	<<if $chef_state gte 9>>
		<<set $specialClothes["chefhat"] to "unlocked">>
	<</if>>
	<<if $fedora_unlock is 1>>
		<<set $specialClothes["fedora"] to "unlocked">>
	<</if>>
	<<if $soup_kitchen_known is 1>>
		<<set $specialClothes["holypendant"] to "unlocked">>
	<</if>>
	<<if $loft_known is 1>>
		<<set $specialClothes["darkpendant"] to "unlocked">>
	<</if>>
	<<if $stone_pendant_found is 1>>
		<<set $specialClothes["stonependant"] to "unlocked">>
	<</if>>
	<<if $livestock_intro isnot undefined>>
		<<set $specialClothes["cowbell"] to "unlocked">>
		<<set $specialClothes["cowbra"] to "unlocked">>
		<<set $specialClothes["cowpanties"] to "unlocked">>
		<<set $specialClothes["cowsocks"] to "unlocked">>
		<<set $specialClothes["cowsleeves"] to "unlocked">>
	<</if>>
	<<if $syndromebird is 1>>
		<<set $specialClothes["featheredhairclip"] to "unlocked">>
	<</if>>
	<<if $catsuit_found is true>>
		<<set $specialClothes["catsuit"] to "unlocked">>
	<</if>>
	<<if $grace gte 100>>
		<<set $specialClothes["holystole"] to "unlocked">>
	<</if>>
	<<if $plants_known.includes("daisy")>>
		<<set $specialClothes["daisy"] to "unlocked">>
	<</if>>
	<<if $hookah_state gte 2>>
		<<set $specialClothes["esotericspectacles"] to "unlocked">>
	<</if>>
	<<if $fox gte 6>>
		<<set $specialClothes["spiritmask"] to "unlocked">>
	<</if>>
	<<if ($feats.currentSave["Pain Rider"] isnot undefined) and ($feats.currentSave["Submerged"] isnot undefined)>>
		<<set $specialClothes["ragtop"] to "unlocked">>
		<<set $specialClothes["ragskirt"] to "unlocked">>
	<</if>>
	<<if $islander_mask gte 100>>
		<<set $specialClothes["islandermask"] to "unlocked">>
	<</if>>
	<<if ["monk"].includes($temple_rank)>>
		<<set $specialClothes["sexynun'shabit"] to "unlocked">>
		<<set $specialClothes["sexynun'sgloves"] to "unlocked">>
		<<set $specialClothes["sexynun'sstockings"] to "unlocked">>
		<<set $specialClothes["sexynun'sveil"] to "unlocked">>
		<<set $specialClothes["sexynun'sornateveil"] to "unlocked">>
		<<set $specialClothes["sexypriest'svestments"] to "unlocked">>
	<</if>>
	<<if $auriga_artefact isnot undefined>>
		<<set $specialClothes["foxmask"] to "unlocked">>
	<</if>>

	<<if Object.values($specialClothes).every(item => item is "unlocked")>>
		<<earnFeat "Curious Attire">>
	<</if>>
<</widget>>

<<widget "specialClothesHint">>
	<<if _specialClothesHint is undefined>>
		<<set _specialClothesHint to {
			"witchdress":"In stock from the 21st of October.",
			"christmasdress":"In stock from the 18th of December.",
			"jinglebelldress":"In stock from the 18th of December.",
			"sleevelessjinglebelldress":"In stock from the 18th of December.",
			"serafuku":"Discover the headteacher's secret.",
			"vampirejacket":"In stock from the 21st of October.",
			"slutshirt":"Survive slavery in an underground brothel.",
			"christmasshirt":"In stock from the 18th of December.",
			"bellydancer'stop":"Be offered the star role in a show at the brothel.",
			"christmastrousers":"In stock from the 18th of December.",
			"bellydancer'sbottoms":"Be offered the star role in a show at the brothel.",
			"bellydancer'sveil":"Be offered the star role in a show at the brothel.",
			"bellydancer'sshoes":"Be offered the star role in a show at the brothel.",
			"haremvest":"Be offered the star role in a show at the brothel.",
			"harempants":"Be offered the star role in a show at the brothel.",
			"loincloth":"Befriend a lonely hunter, or join a pack of wolves.",
			"witchhat":"In stock from the 21st of October.",
			"broomstick":"In stock from the 21st of October.",
			"christmashat":"In stock from the 18th of December.",
			"chefhat":"Become famous for your cream buns.",
			"fedora":"Eavesdrop as a bartender and learn about a criminal undertaking.",
			"holypendant":"Discover the soup kitchen.",
			"darkpendant":"Discover Bailey's fear.",
			"stonependant":"Find beneath a loose stone at the temple.",
			"cowbell":"Become livestock.",
			"cowbra":"Become livestock.",
			"cowpanties":"Become livestock.",
			"cowsocks":"Become livestock.",
			"cowsleeves":"Become livestock.",
			"christmaslegwarmers":"In stock from the 18th of December.",
			"witchshoes":"In stock from the 21st of October.",
			"mummyfacewrap":"In stock from the 21st of October.",
			"mummytop":"In stock from the 21st of October.",
			"mummyskirt":"In stock from the 21st of October.",
			"featheredhairclip":"Romance an avian.",
			"catsuit":"Pillage a shipment.",
			"holystole":"Requires sufficient devotion.",
			"minisnowman":"In stock from the 18th of December.",
			"rose":"In stock from the 7th of February.",
			"scarecrowshirt":"In stock from the 21st of October.",
			"scarecrowhat":"In stock from the 21st of October.",
			"skeletonoutfit":"In stock from the 21st of October.",
			"skeletonmask":"In stock from the 21st of October.",
			"classyvampirejacket":"In stock from the 21st of October.",
			"futuristicbodysuit":"In stock from the 21st of October.",
			"daisy":"Find daisy seeds.",
			"esotericspectacles":"Succeed a master.",
			"spiritmask":"Become sufficiently foxy.",
			"ragtop":"Demonstrate historical torture devices to completion.",
			"ragskirt":"Demonstrate historical torture devices to completion.",
			"minipumpkin":"In stock from the 21st of October.",
			"gakuran":"Discover the headteacher's secret.",
			"classicserafuku":"Discover the headteacher's secret.",
			"sailorribbon":"Discover the headteacher's secret.",
			"islandermask":"Build with foreign wood.",
			"sexynun'shabit":"Progress through the temple's ranks.",
			"sexynun'sgloves":"Progress through the temple's ranks.",
			"sexynun'sstockings":"Progress through the temple's ranks.",
			"sexynun'sveil":"Progress through the temple's ranks.",
			"sexynun'sornateveil":"Progress through the temple's ranks.",
			"sexypriest'svestments":"Progress through the temple's ranks.",
			"foxmask":"Attend an exclusive party.",
		}>>
	<</if>>
<</widget>>

/*
	Set first argument to true to also clear caches.
 */
<<widget "updatesidebarimg">>
	<<if $options.images is 1>>
		<<if $passage is "Start">>
			<<startingPlayerImageUpdate>>
		<<else>>
			<!-- SugarCube doesn't check for element validity, so I'm checking myself here, as to not force callers of this to test. -->
			<<if elementExists("#img")>>
				<<replace "#img">><<canvasimg "mainCanvas">><</replace>>
			<</if>>
		<</if>>
	<</if>>
<</widget>>

<<widget "earSlimeShoppingExhibitionism">>
	<<set $shoppingCentreExit to $passage>>
	<<set $weekly.earSlimeShoppingCentre to 1>>
	<span class="lewd">You feel the slime in your head command you to expose yourself to the whole mall.</span> It doesn't promise anything now. It imposes its will, and expects you to obey.
	<br><br>

	<<if hasSexStat("exhibitionism", 5) and $submissive gte 1900>>
		<<link [[Submit willingly|Shopping Centre Slime Exhibitionism Obey]]>><<corruption 5>><<pain -8>><<stress -12>><<trauma -24>><<sub 2>><<set $phase to 1>><</link>><<promiscuous5>><<ggcorruption>><<llpain>><<llltrauma>><<llstress>>
		<br>
	<</if>>
	<<link [[Obey|Shopping Centre Slime Exhibitionism Obey]]>><<corruption 1>><<pain -4>><<stress -6>><<trauma -12>><<sub 1>><</link>><<gcorruption>><<lpain>><<lltrauma>><<lstress>>
	<br>
	/* Different than normal stat changes as the slime will never for the player to act */
	<<link [[Defy|Shopping Centre Slime Exhibitionism Defy]]>><<corruption -1>><<pain 35>><<stress 18>><<trauma 12>><<def 1>><</link>><<llcorruption>><<ggpain>><<ggtrauma>><<ggstress>>
	<br>
<</widget>>

<<widget "supermarketDisplay">>
	<div id="supermarketDisplay" class="food_ui no-numberify">
		<<set _selectedShop to _args[0]>>
		<<if !$shoppingBasket>><<set $shoppingBasket to {}>><</if>>
		<div id="mobileHeader">
			<div id="controls" class="mobileOnly">
				<div class="gold bold">Basket:</div>
				<div><<supermarketDisplayFillBasket>></div>
			</div>
			<div class="mobileOnly">
				<<if $options.images>>
					<<link "<<iconUi 'basket.png'>>">>
						<<set _basketOpenAlt to _basketOpen>>
						<<replace "#altSection">><<supermarketDisplayBasket>><</replace>>
						<<if _basketOpenAlt>>
							<<toggleclass "#altSection, #mobileCloser" "mobileHidden">>
						<<else>>
							<<removeclass "#altSection, #mobileCloser" "mobileHidden">>
						<</if>>
					<</link>>
				<<else>>
					<<link "Basket">>
						<<set _basketOpenAlt to _basketOpen>>
							<<toggleclass "#altSection, #mobileCloser" "mobileHidden">>
						<<if _basketOpenAlt>>
							<<replace "#altSection">><<supermarketDisplayBasket>><</replace>>
						<<else>>
							<<replace "#altSection">><<supermarketDisplayBasket>><</replace>>
						<</if>>
					<</link>>
				<</if>>
			</div>
		</div>
		<div id="body">
			<div id="mainSection">
				<div id="search">
					Search: <<textbox "_foodSearch" "">>
					<<run $(() => {
						var foodTimer = null;
						$('#textbox--foodsearch').on('input change keypress', e => {
							_foodSearch = e.target.value;
							clearTimeout(foodTimer);
							foodTimer = setTimeout(updateUI, 300);
						});
						var updateUI = () => {
							Wikifier.wikifyEval('<<if elementExists(\'#itemList\')>><<replace "#itemList">><<supermarketDisplayItems>><</replace>><</if>>');
						}
					})>>
				</div>
				<div id="itemList">
					<<supermarketDisplayItems>>
				</div>
			</div>
			<div id="altSection" class="mobileHidden">
				<<supermarketDisplayBasket>>
			</div>
			<div id="mobileCloser" class="mobileOnly mobileHidden" onclick="wikifier('addclass', '#altSection', 'mobileHidden'); wikifier('addclass', '#mobileCloser', 'mobileHidden');"></div>
		</div>
	</div>
<</widget>>

<<widget "supermarketDisplayItems">>
	<<set _foodKeys to []>>
	<<set _foodGroups to []>>
	<<run Object.keys(setup.plants).forEach(key => {
		const item = setup.plants[key];
		if (!item.shop or !item.shop.includes(_selectedShop)) return;

		const filter = _foodSearch ? _foodSearch.toLowerCase().split(/[_ ]/g) : false;
		if (filter and !filter.find(term =>
				item.name.includes(term) or
				item.type.includes(term) or
				item.plural?.includes(term) or
				item.singular?.includes(term)
			)) {
			return;
		}

		_foodKeys.pushUnique(key);
		if (V.plants[key].supermarket gt 0) {
			_foodGroups.pushUnique(item.type);
		} else {
			_foundSoldOut to true;
		}
	})>>
	<<if _foundSoldOut>><<run _foodGroups.pushUnique("Sold out")>><</if>>
	<<for _category range _foodGroups>>
		<<set _categoryVar to "_" + _category.replace(" ", "")>>
		<<foldout false _categoryVar>>
			<span class="gold"><<print _category.toLocaleUpperFirst()>></span>
			<<set _keys to _foodKeys.filter(key =>
				(_category isnot "Sold out" && setup.plants[key].type is _category && $plants[key].supermarket > 0) ||
				(_category is "Sold out" && $plants[key].supermarket <= 0)
			)>>
			<<for $_i, $_key range _keys>>
				<div @id="$_key" class="item"><<supermarketDisplayItem $_key>></div>
				<<if $_i lt _keys.length - 1>><hr><</if>>
			<</for>>
		<</foldout>>
	<</for>>
<</widget>>

<<widget "supermarketDisplayItem">>
	<<set _key to _args[0]>>
	<<set $_setupItem to setup.plants[_key]>>
	<div class="details">
		<div>
			<<tendingicon $_setupItem.icon>> |

			Owned: <span class="gold"><<print $plants[_key].amount>></span> |

			<<if Time.dayState is "night">>
				Value: <span class="gold"> £<<print ($_setupItem.plant_cost * ($_setupItem.boughtInBulk or 1) * 2 / 100).toFixed(2)>></span>
			<<else>>
				Price: <span class="gold"> £<<print ($_setupItem.plant_cost * ($_setupItem.boughtInBulk or 1) * 2 / 100).toFixed(2)>></span>
			<</if>>
			<<if $_setupItem.boughtInBulk>>
				per <<print $_setupItem.boughtInBulk>>
			<</if>>
		</div>
		<<if $plants[_key].supermarket gt 0>>
			<<numberStepper "<<recipe_name _key 'cap'>>" $shoppingBasket[_key] {
				callback: (value, arr) => {
					V.shoppingBasket[arr[0]] = value;
					Wikifier.wikifyEval('<<replace "#altSection">><<supermarketDisplayBasket>><</replace>>');
				},
				valueFormat: (value, percentage, values) => {
					return `${value}/${values[1]}`;
				},
				values: [_key, $plants[_key].supermarket],
				disableMinMax: false,
				step: 1 * ($_setupItem.boughtInBulk or 1),
				max: Math.floor($plants[_key].supermarket),
				colorArr:["--yellow"],
				percentage: false
			}>>
		<<else>>
			<br>
			<span class="red">
				<<switch $plants[_key].name>>
					<<case "prawn" "clam" "date" "lime">><<recipe_name _key 'cap'>>s are
					<<case "cherry">>Cherries are
					<<case "oats">>Oats are
					<<default>><<recipe_name _key 'cap'>> is
				<</switch>>
				out of stock.
			</span>
			<br>
		<</if>>
	</div>
	<div class="recipe">
		<<capture _key>>
			<<if $options.images is 1>>
				<<set _file to `recipe_${$_setupItem.type}.png`>>
				<<link "<<iconUi _file>>">>
					<<replace "#altSection">><<supermarketDisplayDetails _key>><</replace>>
					<<removeclass "#altSection, #mobileCloser" "mobileHidden">>
				<</link>>
			<<else>>
				<<link "Details">>
					<<replace "#altSection">><<supermarketDisplayDetails _key>><</replace>>
					<<removeclass "#altSection, #mobileCloser" "mobileHidden">>
				<</link>>
			<</if>>
		<</capture>>
	</div>
<</widget>>

<<widget "supermarketDisplayBasket">>
	<<set _basketOpen to true>>
	<div id="basket">Basket:
		<div class="mobileOnly">
			<<link "Close">>
				<<addclass "#altSection, #mobileCloser" "mobileHidden">>
			<</link>>
			<br><br>
		</div>
	</div>

	<div id="basketItems">
		<div class="mobileHidden">
			<<supermarketDisplayFillBasket>>
			<hr>
		</div>
		<<set $_typesInBasket to 0>>
		<<set _totalCost to Object.entries($shoppingBasket).reduce((sum, [key, amount]) => {
			if (amount > 0) {
				$_typesInBasket++;
			};
			sum += setup.plants[key].plant_cost * amount * 2 or 0;
			return sum;
		}, 0)>>

		<<if $_typesInBasket is 0>>
			Your shopping basket is empty.
			<<exit>>
		<</if>>

		<<if $_typesInBasket gt 5>>
			<<foldout false "_basketFoldout">>
				<span>Items:</span>
				<div class="itemSummary">
					<<supermarketDisplayBasketSummary>>
				</div>
			<</foldout>>
		<<else>>
			Items:
			<div class="itemSummary">
				<<supermarketDisplayBasketSummary>>
			</div>
		<</if>>
		<hr>
		<<if Time.dayState is "night" and Time.hour isnot 21>>
			<<link [[Steal|$passage]]>>
				<<for _itemInCart range Object.keys($shoppingBasket)>>
					<<for _i to 0; _i lt $shoppingBasket[_itemInCart]; _i++>>
						<<crimeUp `setup.plants[_itemInCart].plant_cost * 2 / 100` "thievery">>
					<</for>>
					<<tending_give $plants[_itemInCart].name $shoppingBasket[_itemInCart]>>
					<<set $plants[_itemInCart].supermarket -= $shoppingBasket[_itemInCart]>>
				<</for>>
				<<set $shoppingBasket to {}>>
			<</link>>
		<<else>>
			Total: <span class="gold"> £<<print (_totalCost / 100).toFixed(2)>></span>
			<br>
			<<if $money gte _totalCost>>
				<<link [["Purchase"|$passage]]>>
					<<for _itemInCart range Object.keys($shoppingBasket)>>
						<<tending_give $plants[_itemInCart].name $shoppingBasket[_itemInCart]>>
						<<money `-(setup.plants[_itemInCart].plant_cost * $shoppingBasket[_itemInCart] * 2)` "supermarket">>
						<<set $plants[_itemInCart].supermarket -= $shoppingBasket[_itemInCart]>>
					<</for>>
					<<set $shoppingBasket to {}>>
				<</link>>
			<<else>>
				You can't afford your selection of goods.
			<</if>>
		<</if>>
		|
		<<link "Empty">>
			<<set $shoppingBasket to {}>>
			<<addclass "#altSection, #mobileCloser" "mobileHidden">>
			<<replace "#itemList">><<supermarketDisplayItems>><</replace>>
			<<replace "#altSection">><<supermarketDisplayBasket>><</replace>>
		<</link>>
	</div>
	<br><br>
<</widget>>

<<widget "supermarketDisplayBasketSummary">>
	<<for _itemInCart range Object.keys($shoppingBasket)>>
		<<if $shoppingBasket[_itemInCart] lte 0>><<continue>><</if>>
		<div class="basketItem">
			<div>
				<<tendingicon setup.plants[_itemInCart].icon>>
				<<recipe_name _itemInCart "cap">> |
				x<<print $shoppingBasket[_itemInCart]>>
			</div>
			<div class="price">
				<span class="gold"> £<<print (setup.plants[_itemInCart].plant_cost * $shoppingBasket[_itemInCart] * 2 / 100).toFixed(2)>></span>
				<span>
					<<capture _itemInCart>>
						<<link "Remove">>
							<<run delete $shoppingBasket[_itemInCart]>>
							<<replace "#itemList">><<supermarketDisplayItems>><</replace>>
							<<replace "#altSection">><<supermarketDisplayBasket>><</replace>>
						<</link>>
					<</capture>>
				</span>
			</div>
		</div>
	<</for>>
<</widget>>

<<widget "supermarketDisplayFillBasket">>
	<<if Object.keys(setup.plants).find(key => {
		if (setup.plants[key]?.shop?.includes(_selectedShop) and $plants[key].supermarket) return key;
	})>>
		Fill
		<<link "25%">><<supermarketDisplayFillBasketLink 0.25>><</link>> |
		<<link "50%">><<supermarketDisplayFillBasketLink 0.5>><</link>> |
		<<link "75%">><<supermarketDisplayFillBasketLink 0.75>><</link>> |
		<<link "100%">><<supermarketDisplayFillBasketLink 1>><</link>>
	<<else>>
		The shop is currently out of stock.
	<</if>>
<</widget>>

<<widget "supermarketDisplayFillBasketLink">>
	<<set $shoppingBasket to {}>>
	<<run Object.keys(setup.plants).forEach(key => {
		if (setup.plants[key]?.shop?.includes(_selectedShop) and $plants[key].supermarket) {
			$shoppingBasket[key] to Math.ceil($plants[key].supermarket * _args[0]);
		}
	})>>
	<<replace "#itemList">><<supermarketDisplayItems>><</replace>>
	<<replace "#altSection">><<supermarketDisplayBasket>><</replace>>
	<<removeclass "#altSection, #mobileCloser" "mobileHidden">>
<</widget>>

<<widget "supermarketDisplayDetails">>
	<<set $_setupItem to setup.plants[_args[0]]>>
	<div id="basket">
		<div>
		<<tendingicon $_setupItem.icon>>
			<div class="recipeTitle"><<recipe_name _args[0] "cap">>:</div>
		</div>
		<div class="mobileOnly">
			<<link "Close">>
				<<addclass "#altSection, #mobileCloser" "mobileHidden">>
			<</link>>
		</div>
	</div>
	<<set _basketOpen to false>>
	<div id="basketItems">
		<div class="mobileHidden">
			<<link "Return to basket">>
				<<replace "#altSection">><<supermarketDisplayBasket>><</replace>>
				<<addclass "#altSection, #mobileCloser" "mobileHidden">>
			<</link>>
			<hr>
		</div>
		<<if $_setupItem.boughtInBulk>>
			Bought in sets of <<print $_setupItem.boughtInBulk>>.
		<</if>>
		<<knownFoodRecipes _args[0]>>
	</div>
<</widget>>
